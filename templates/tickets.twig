{% extends "base.twig" %}

{% block title %}Tickets - Ticket System{% endblock %}

{% block content %}
<div class="min-h-screen bg-gradient-to-br from-purple-50 via-white to-blue-50 p-6">
    {# Toast Messages #}
    {% if successMessage %}
    <div id="toast" class="fixed top-5 right-5 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg z-50 animate-slide-in">
        {{ successMessage }}
    </div>
    {% endif %}
    
    {% if errorMessage %}
    <div id="toast" class="fixed top-5 right-5 bg-red-500 text-white px-6 py-4 rounded-lg shadow-lg z-50 animate-slide-in">
        {{ errorMessage }}
    </div>
    {% endif %}

    <div class="max-w-7xl mx-auto">
        {# Header #}
        <div class="flex items-center justify-between mb-6">
            <div class="flex items-center gap-3">
                <svg class="text-purple-600 w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z" />
                </svg>
                <h1 class="text-2xl font-bold text-gray-800">Tickets</h1>
            </div>
            <button onclick="openCreateModal()" class="flex items-center gap-2 bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors shadow-md">
                Create A Task
            </button>
        </div>

        {# Tickets Table #}
        <div class="bg-white rounded-xl shadow-md overflow-hidden">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50 border-b border-gray-200">
                        <tr>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600">Code</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600">Company</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600">Start Date</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600">Status</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600">Days Left</th>
                            <th class="px-6 py-4 text-left text-sm font-semibold text-blue-600">Issue</th>
                            <th class="px-6 py-4 text-right">
                                <button onclick="location.reload()" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center gap-2 ml-auto">
                                    Refresh
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                                    </svg>
                                </button>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-100">
                        {% if tickets is empty %}
                        <tr>
                            <td colspan="7" class="px-6 py-12 text-center text-gray-500">
                                <svg class="mx-auto mb-4 text-gray-300 w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z" />
                                </svg>
                                <p class="text-lg">No tickets found</p>
                                <button onclick="openCreateModal()" class="mt-4 text-purple-600 hover:text-purple-700 font-semibold">
                                    Create your first ticket
                                </button>
                            </td>
                        </tr>
                        {% else %}
                        {% for ticket in tickets %}
                        <tr class="hover:bg-gray-50 transition-colors">
                            <td class="px-6 py-4 text-sm font-medium text-gray-800">{{ ticket.id }}</td>
                            <td class="px-6 py-4 text-sm text-gray-700">{{ ticket.company|default('N/A') }}</td>
                            <td class="px-6 py-4 text-sm text-gray-700">{{ ticket.start_date|default('N/A') }}</td>
                            <td class="px-6 py-4">
                                <button onclick="openEditModal({{ ticket.id }})" class="group relative" title="Click to change status">
                                    <span class="inline-block w-6 h-6 rounded-full transition-transform group-hover:scale-110 cursor-pointer
                                        {% if ticket.status == 'open' %}bg-green-500
                                        {% elseif ticket.status == 'in_progress' %}bg-orange-500
                                        {% else %}bg-red-500{% endif %}">
                                    </span>
                                </button>
                            </td>
                            <td class="px-6 py-4 text-sm text-gray-700">{{ ticket.days_left|default(0) }}</td>
                            <td class="px-6 py-4 text-sm text-gray-700">{{ ticket.title }}</td>
                            <td class="px-6 py-4 text-right">
                                <div class="flex items-center justify-end gap-2">
                                    <button onclick="openEditModal({{ ticket.id }})" class="inline-flex items-center justify-center w-10 h-10 bg-purple-600 hover:bg-purple-700 text-white rounded-full transition-colors" title="Edit ticket">
                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                        </svg>
                                    </button>
                                    <button onclick="deleteTicket({{ ticket.id }})" class="inline-flex items-center justify-center w-10 h-10 bg-red-600 hover:bg-red-700 text-white rounded-full transition-colors" title="Delete ticket">
                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                        </svg>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        {% endfor %}
                        {% endif %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    {# Create/Edit Modal #}
    <div id="ticketModal" class="hidden fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-fade-in">
        <div class="bg-white rounded-2xl p-8 max-w-3xl w-full max-h-[90vh] overflow-y-auto shadow-2xl" onclick="event.stopPropagation()">
            <div class="flex items-center justify-between mb-6">
                <h2 id="modalTitle" class="text-2xl font-bold text-gray-800">Create Ticket</h2>
                <button onclick="closeModal()" class="p-2 hover:bg-gray-100 rounded-lg transition-colors">
                    <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

            <form id="ticketForm" method="POST" action="/tickets/create">
                <input type="hidden" id="ticketId" name="ticket_id">
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                Product <span class="text-red-500">*</span>
                            </label>
                            <input type="text" name="title" id="title" placeholder="E-Invoice" required
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500">
                        </div>

                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                Status <span class="text-red-500">*</span>
                            </label>
                            <select name="status" id="status" required
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 bg-white">
                                <option value="open">Open (Green)</option>
                                <option value="in_progress">In Progress (Orange)</option>
                                <option value="closed">Closed (Red)</option>
                            </select>
                            <div class="mt-2 flex items-center gap-2 text-xs text-gray-500">
                                <span class="inline-block w-3 h-3 rounded-full bg-green-500"></span>
                                <span>Open</span>
                                <span class="inline-block w-3 h-3 rounded-full bg-orange-500 ml-2"></span>
                                <span>In Progress</span>
                                <span class="inline-block w-3 h-3 rounded-full bg-red-500 ml-2"></span>
                                <span>Closed</span>
                            </div>
                        </div>

                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                Employee
                            </label>
                            <input type="text" name="employee" id="employee" placeholder="Ahmed Mahmoud"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500">
                        </div>

                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                Company
                            </label>
                            <input type="text" name="company" id="company" placeholder="Burger King"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500">
                        </div>

                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                Start Date
                            </label>
                            <input type="date" name="start_date" id="start_date"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500">
                        </div>

                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                End Date
                            </label>
                            <input type="date" name="end_date" id="end_date"
                                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500">
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-semibold text-gray-700 mb-2">
                            Task Description
                        </label>
                        <textarea name="description" id="description" rows="12" placeholder="Enter task description..."
                            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 resize-none"></textarea>
                    </div>
                </div>

                <div class="flex gap-4 mt-8">
                    <button type="button" onclick="closeModal()" class="flex-1 bg-orange-500 hover:bg-orange-600 text-white py-3 px-6 rounded-lg font-semibold text-lg transition-colors">
                        Close
                    </button>
                    <button type="submit" class="flex-1 bg-purple-700 hover:bg-purple-800 text-white py-3 px-6 rounded-lg font-semibold text-lg transition-colors">
                        <span id="submitButtonText">Add Task</span>
                    </button>
                </div>
            </form>
        </div>
    </div>

    {# Delete Confirmation Modal #}
    <div id="deleteModal" class="hidden fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50">
        <div class="bg-white rounded-2xl p-8 max-w-md w-full mx-4 shadow-2xl">
            <h3 class="text-xl font-bold text-gray-800 mb-4 text-center">Delete Ticket?</h3>
            <p class="text-gray-600 mb-6 text-center">
                This action cannot be undone. Are you sure you want to delete this ticket?
            </p>
            <form id="deleteForm" method="POST" action="/tickets/delete">
                <input type="hidden" id="deleteTicketId" name="ticket_id">
                <div class="flex gap-4">
                    <button type="button" onclick="closeDeleteModal()" class="flex-1 bg-gray-500 hover:bg-gray-600 text-white py-3 px-6 rounded-lg font-semibold transition-colors">
                        Cancel
                    </button>
                    <button type="submit" class="flex-1 bg-red-600 hover:bg-red-700 text-white py-3 px-6 rounded-lg font-semibold transition-colors">
                        Delete
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
const ticketsData = {{ tickets|json_encode|raw }};

function openCreateModal() {
    document.getElementById('ticketModal').classList.remove('hidden');
    document.getElementById('modalTitle').textContent = 'Create Ticket';
    document.getElementById('ticketForm').action = '/tickets/create';
    document.getElementById('submitButtonText').textContent = 'Add Task';
    document.getElementById('ticketForm').reset();
    document.getElementById('ticketId').value = '';
}

function openEditModal(ticketId) {
    const ticket = ticketsData.find(t => t.id == ticketId);
    if (!ticket) return;

    document.getElementById('ticketModal').classList.remove('hidden');
    document.getElementById('modalTitle').textContent = 'Edit Ticket';
    document.getElementById('ticketForm').action = '/tickets/update';
    document.getElementById('submitButtonText').textContent = 'Update Task';
    
    document.getElementById('ticketId').value = ticket.id;
    document.getElementById('title').value = ticket.title;
    document.getElementById('status').value = ticket.status;
    document.getElementById('employee').value = ticket.employee || '';
    document.getElementById('company').value = ticket.company || '';
    document.getElementById('start_date').value = ticket.start_date || '';
    document.getElementById('end_date').value = ticket.end_date || '';
    document.getElementById('description').value = ticket.description || '';
}

function closeModal() {
    document.getElementById('ticketModal').classList.add('hidden');
}

function deleteTicket(ticketId) {
    document.getElementById('deleteModal').classList.remove('hidden');
    document.getElementById('deleteTicketId').value = ticketId;
}

function closeDeleteModal() {
    document.getElementById('deleteModal').classList.add('hidden');
}

// Close modal on outside click
document.getElementById('ticketModal').addEventListener('click', function(e) {
    if (e.target === this) closeModal();
});

// Auto-hide toast
setTimeout(() => {
    const toast = document.getElementById('toast');
    if (toast) {
        toast.style.opacity = '0';
        setTimeout(() => toast.remove(), 300);
    }
}, 3000);
</script>
{% endblock %}